name: CI/CD

on:
  push:
    tags: [ 'v*' ]
    # branches: [ main ]  # Commented out for future use
  # pull_request:
  #   branches: [ main ]  # Commented out for future use
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., v1.0.0)'
        required: true
        type: string

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'
        
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Build
      run: dotnet build --no-restore --configuration Release
      
    - name: Test
      run: dotnet test --no-build --verbosity normal --configuration Release
      
    - name: Pack
      if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
      run: dotnet pack --no-build --configuration Release -o nupkg
      
    - name: Upload artifact
      if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
      uses: actions/upload-artifact@v4
      with:
        name: nupkg
        path: nupkg/*.nupkg
        
  publish:
    needs: build
    if: (github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')) || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    
    steps:
    - name: Download artifact
      uses: actions/download-artifact@v4
      with:
        name: nupkg
        
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'
        
    - name: Publish to NuGet
      run: dotnet nuget push "*.nupkg" --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json --skip-duplicate
      
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: "*.nupkg"
        generate_release_notes: true
        tag_name: ${{ github.event.inputs.version || github.ref_name }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 